name: Utilz

on:
  push:
    branches:
      - master
      - main
      - pyproject
  workflow_dispatch:

jobs:
  # Job (1): Run testing in parallel against multiples OSs and Python versions
  test:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # OSs to test
        os: [ubuntu-latest]
        # Python versions to test
        python-version: [3.7, 3.8, 3.9]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

        # See also: https://github.com/marketplace/actions/install-poetry-action when
        # testing on more OSs
      - name: Setup Environment
        run: |
          curl -sSL https://install.python-poetry.org | python
          poetry install --all-extras

      # 4. Actually run the tests with coverage
      - name: Run Tests
        run: |
          poetry run python --version
          poetry run coverage run --source=utilz -m pytest

      # 5. Send coverage to coveralls.io but waiting on parallelization to finish
      # Not using the official github action in the marketplace to upload because it requires a .lcov file, which pytest doesn't generate. It's just easier to use the coveralls python library which does the same thing, but works with pytest.
      #     - name: Upload Coverage
      #       # The coveralls python package has some 422 server issues with uploads from github-actions so try both service providers, for more see:
      #       # https://github.com/TheKevJames/coveralls-python/issues/252
      #       run: coveralls --service=github || coveralls --service=github-actions
      #       env:
      #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #         COVERALLS_FLAG_NAME: $${{ matrix}}
      #         COVERALLS_PARALLEL: true

      # # Job (2): Send a finish notification to coveralls.io to integrate coverage across parallel tests
      # coveralls:
      #   if: "!contains(github.event.head_commit.message, 'skip ci')"
      #   name: Coveralls.io Upload
      #   needs: test
      #   runs-on: ubuntu-latest
      #   container: python:3-slim
      #   continue-on-error: true
      #   steps:
      #     - name: Finished
      #       run: |
      #         pip3 install --upgrade coveralls
      #         coveralls --service=github --finish || coveralls --service=github-actions --finish
      #       env:
      #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build docs
        run: poetry run mkdocs build

      - name: Build package
        run: poetry build

      # - name: Deploy docs
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./site
